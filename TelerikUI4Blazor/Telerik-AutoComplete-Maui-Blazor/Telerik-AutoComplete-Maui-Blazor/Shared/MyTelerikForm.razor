@page "/form"
@using Telerik_AutoComplete_Maui_Blazor.Models

<div class="demo-section">
    @if (ValidSubmit)
    {
        <div class="demo-alert demo-alert-success" role="alert">
            The form was submitted successfully.
        </div>
    }
    else
    {
        <TelerikForm Model="@TestUser"
                     OnValidSubmit="@HandleValidSubmit"
                     OnInvalidSubmit="@HandleInvalidSubmit">
            <FormValidation>
                <DataAnnotationsValidator></DataAnnotationsValidator>
            </FormValidation>
            <FormItems>
                <FormItem Field="@nameof(User.FirstName)"></FormItem>
                <FormItem Field="@nameof(User.LastName)"></FormItem>
                <FormItem Field="@nameof(User.Email)">
                    <Template>
                        <label for="mail" class="k-label k-form-label">Email*:</label>
                        <TelerikTextBox Id="mail" @bind-Value="@TestUser.Email" InputMode="email" PlaceHolder="example@domain.com"></TelerikTextBox>
                        <TelerikValidationMessage For="@(() => TestUser.Email)"></TelerikValidationMessage>
                    </Template>
                </FormItem>
                <FormItem Field="@nameof(User.Password)">
                    <Template>
                        <label for="pass" class="k-label k-form-label">Password*:</label>
                        <TelerikTextBox Id="pass" @bind-Value="@TestUser.Password" Password="true"></TelerikTextBox>
                        <TelerikValidationMessage For="@(() => TestUser.Password)"></TelerikValidationMessage>
                    </Template>
                </FormItem>
                <FormItem Field="@nameof(User.BirthDate)" />
                <FormItem Field="@nameof(User.AcceptTerms)" />
            </FormItems>
        </TelerikForm>
    }
</div>

@code {
    public User TestUser { get; set; } = new User() {
        FirstName = "Johny",
        LastName = "Doe",
        Email = "johny.doe@email.com",
        Password = "testpassword",
        BirthDate = new DateTime(2000, 12, 10),
        City = "Sofia",
        Country = "Bulgaria",
        AddressLine = "City Center"
    };
    public bool ValidSubmit { get; set; } = false;

    async void HandleValidSubmit()
    {
        ValidSubmit = true;

        await Task.Delay(2000);

        ValidSubmit = false;

        StateHasChanged();
    }

    void HandleInvalidSubmit()
    {
        ValidSubmit = false;
    }
}